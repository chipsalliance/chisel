"use strict";(globalThis.webpackChunkchisel_lang=globalThis.webpackChunkchisel_lang||[]).push([[9128],{8402:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var o=t(4848),s=t(8453);const r={layout:"docs",title:"Ports",section:"chisel3"},i="Ports",a={id:"explanations/ports",title:"Ports",description:"Ports are used as interfaces to hardware components.  A port is simply",source:"@site/docs/explanations/ports.md",sourceDirName:"explanations",slug:"/explanations/ports",permalink:"/docs/explanations/ports",draft:!1,unlisted:!1,editUrl:"https://github.com/chipsalliance/chisel/tree/main/docs/src/explanations/ports.md",tags:[],version:"current",frontMatter:{layout:"docs",title:"Ports",section:"chisel3"},sidebar:"chiselSidebar",previous:{title:"Polymorphism and Parameterization",permalink:"/docs/explanations/polymorphism-and-parameterization"},next:{title:"Printing",permalink:"/docs/explanations/printing"}},c={},d=[{value:"Inspecting Module ports",id:"inspecting-module-ports",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"ports",children:"Ports"})}),"\n",(0,o.jsxs)(n.p,{children:["Ports are used as interfaces to hardware components.  A port is simply\nany ",(0,o.jsx)(n.code,{children:"Data"})," object that has directions assigned to its members."]}),"\n",(0,o.jsxs)(n.p,{children:["Chisel provides port constructors to allow a direction to be added\n(input or output) to an object at construction time. Primitive port\nconstructors wrap the type of the port in ",(0,o.jsx)(n.code,{children:"Input"})," or ",(0,o.jsx)(n.code,{children:"Output"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"An example port declaration is as follows:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:"class Decoupled extends Bundle {\n  val ready = Output(Bool())\n  val data  = Input(UInt(32.W))\n  val valid = Input(Bool())\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["After defining ",(0,o.jsx)(n.code,{children:"Decoupled"}),", it becomes a new type that can be\nused as needed for module interfaces or for named collections of\nwires."]}),"\n",(0,o.jsx)(n.p,{children:"By folding directions into the object declarations, Chisel is able to\nprovide powerful wiring constructs described later."}),"\n",(0,o.jsx)(n.h2,{id:"inspecting-module-ports",children:"Inspecting Module ports"}),"\n",(0,o.jsx)(n.p,{children:"(Chisel 3.2+)"}),"\n",(0,o.jsxs)(n.p,{children:["Chisel 3.2 introduced ",(0,o.jsx)(n.code,{children:"DataMirror.modulePorts"})," which can be used to inspect the IOs of any Chisel module (this includes modules in both ",(0,o.jsx)(n.code,{children:"import chisel3._"})," and ",(0,o.jsx)(n.code,{children:"import Chisel._"}),", as well as BlackBoxes from each package).\nHere is an example of how to use this API:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:'import chisel3.reflect.DataMirror\nimport chisel3.stage.ChiselGeneratorAnnotation\n\nclass Adder extends Module {\n  val a = IO(Input(UInt(8.W)))\n  val b = IO(Input(UInt(8.W)))\n  val c = IO(Output(UInt(8.W)))\n  c := a +& b\n}\n\nclass Test extends Module {\n  val adder = Module(new Adder)\n  // for debug only\n  adder.a := DontCare\n  adder.b := DontCare\n\n  // Inspect ports of adder\n  // See the result below.\n   DataMirror.modulePorts(adder).foreach { case (name, port) => {\n    println(s"Found port $name: $port")\n  }}\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"This will print the following:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Found port clock: Adder.clock: IO[Clock]\nFound port reset: Adder.reset: IO[Reset]\nFound port a: Adder.a: IO[UInt<8>]\nFound port b: Adder.b: IO[UInt<8>]\nFound port c: Adder.c: IO[UInt<8>]\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(6540);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);