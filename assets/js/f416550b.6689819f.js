"use strict";(self.webpackChunkchisel_lang=self.webpackChunkchisel_lang||[]).push([[1596],{737:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var r=n(4848),s=n(8453);const a={layout:"docs",title:"Supported Hardware",section:"chisel3"},o="Supported Hardware",i={id:"explanations/supported-hardware",title:"Supported Hardware",description:"While Chisel focuses on binary logic, Chisel can support analog and tri-state wires with the Analog type - see Datatypes in Chisel.",source:"@site/docs/explanations/supported-hardware.md",sourceDirName:"explanations",slug:"/explanations/supported-hardware",permalink:"/docs/explanations/supported-hardware",draft:!1,unlisted:!1,editUrl:"https://github.com/chipsalliance/chisel/tree/main/docs/src/explanations/supported-hardware.md",tags:[],version:"current",frontMatter:{layout:"docs",title:"Supported Hardware",section:"chisel3"},sidebar:"chiselSidebar",previous:{title:"Source Locators",permalink:"/docs/explanations/source-locators"},next:{title:"Testing",permalink:"/docs/explanations/testing"}},c={},d=[];function l(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"supported-hardware",children:"Supported Hardware"})}),"\n",(0,r.jsxs)(t.p,{children:["While Chisel focuses on binary logic, Chisel can support analog and tri-state wires with the ",(0,r.jsx)(t.code,{children:"Analog"})," type - see ",(0,r.jsx)(t.a,{href:"data-types",children:"Datatypes in Chisel"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"We focus on binary logic designs as they constitute the vast majority of designs in practice. Tri-state logic are poorly supported standard industry flows and require special/controlled hard macros in order to be done."})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var r=n(6540);const s={},a=r.createContext(s);function o(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);