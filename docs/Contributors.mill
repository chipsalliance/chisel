// See LICENSE for license details.

package build.docs

import github4s.GithubClient
import github4s.GithubClient._
import github4s.domain.User

import java.util.concurrent.Executors

import cats.effect.IO
import org.http4s.client.{Client, JavaNetClientBuilder}

import cats.effect.unsafe.implicits.global

object Contributors {
  def contributors(repo: GitHubRepository): List[User] =
    GithubClient[IO](httpClient, token).repos
      .listContributors(repo.owner, repo.repo)
      .unsafeRunSync()
      .result match {
      case Left(e) =>
        throw new Exception(
          s"Unable to fetch contributors for ${repo.serialize}. Did you misspell it? Did the repository move?" +
            s" Is access token defined: ${token.isDefined}? Original exception: ${e.getMessage}"
        )
      case Right(r) => r
    }

  def contributorsMarkdown(contributors: Seq[(String, String)]): String =
    contributors
      .sortBy(_._1.toLowerCase)
      .map { case (login, html_url) => s"- [`@${login}`](${html_url})" }
      .mkString("\n")
}
