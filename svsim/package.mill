package build.svsim

import mill._
import mill.scalalib._
import mill.scalalib.scalafmt._
import mill.define.Cross

import build._

object `package` extends RootModule {
  // https://github.com/com-lihaoyi/mill/issues/3693
  object cross extends Cross[Svsim](v.scalaCrossVersions)
}

trait Svsim extends CrossSbtModule with HasCommonOptions with ScalafmtModule {
  def millSourcePath = super.millSourcePath / os.up

  override def scalacOptions = Task {
    super.scalacOptions() ++
      Option.when(!v.isScala3(crossScalaVersion))(
        "-Xsource-features:case-apply-copy-access"
      )
  }

  object test extends SbtTests with TestModule.ScalaTest with ScalafmtModule {
    def ivyDeps = Agg(v.scalatest, v.scalacheck)
  }

  def clangFormatConfig = Task.Source {
    Task.workspace / "svsim" / ".clang-format"
  }

  def cppSources = Task.Sources {
    Task.workspace / "svsim" / "src" / "main" / "resources" / "simulation-driver.cpp"
  }

  def clangformat(args: String*) = Task.Command {
    os.proc(
      "clang-format",
      "-i",
      "--verbose",
      s"--style=file:${clangFormatConfig().path}",
      cppSources()
    ).call(cwd = Task.dest)
  }

}
