package build.firrtl

import mill._
import mill.scalalib._
import mill.scalalib.scalafmt._
import mill.define.Cross

import build._

object `package` extends RootModule {
  // https://github.com/com-lihaoyi/mill/issues/3693
  object cross extends Cross[Firrtl](v.scalaCrossVersions)
}

trait Firrtl extends CrossSbtModule with Cross.Module[String] with HasScala2MacroAnno with ScalafmtModule {
  def scalaVersion = crossScalaVersion

  def millSourcePath = super.millSourcePath / os.up

  override def scalacOptions = Task {
    if (v.isScala3(crossScalaVersion)) {
      Seq.empty[String]
    } else {
      v.scala2CommonOptions ++ Seq(
        "-language:reflectiveCalls",
        "-language:existentials",
        "-language:implicitConversions",
        "-Yrangepos", // required by SemanticDB compiler plugin
        "-Xsource:3",
        "-Xsource-features:infer-override"
      )
    }
  }

  val commonDeps = Agg(
    v.scopt,
    v.commonText,
    v.osLib,
    v.json4s
  )

  def ivyDeps = if (v.isScala3(crossScalaVersion)) {
    commonDeps
  } else {
    commonDeps ++ Agg(v.dataclass)
  }

  object test extends SbtTests with TestModule.ScalaTest with ScalafmtModule {
    def ivyDeps = Agg(v.scalatest, v.scalacheck)
  }
}
